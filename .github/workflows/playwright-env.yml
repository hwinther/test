name: "Playwright e2e tests - environment"

on:
  workflow_dispatch:
  push:
    branches:
      - qa
      - test
  pull_request:
    branches:
      - dev
      - "feature/*"
      - "bugfix/*"
    paths:
      - "tests/playwright/**"
      - ".github/workflows/playwright.yml"
    types: [opened, reopened, labeled, synchronize, ready_for_review]

permissions:
  contents: read
  checks: write
  pull-requests: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  call-workflow-main:
    if: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main' && github.event.pull_request.draft == false) }}
    uses: hwinther-tietoevry/test/.github/workflows/playwright.yml@main
    with:
      deploy_target: prod
      repo_name: main
      url_prefix:
    secrets: inherit
  call-workflow-qa:
    if: ${{ github.ref == 'refs/heads/qa' || (github.event_name == 'pull_request' && github.base_ref == 'qa' && github.event.pull_request.draft == false) }}
    uses: hwinther-tietoevry/test/.github/workflows/playwright.yml@qa
    with:
      deploy_target: qa
      repo_name: qa
      url_prefix: qa-
    secrets: inherit
  call-workflow-test:
    if: ${{ github.ref == 'refs/heads/test' || (github.event_name == 'pull_request' && github.base_ref == 'test' && github.event.pull_request.draft == false) }}
    uses: hwinther-tietoevry/test/.github/workflows/playwright.yml@test
    with:
      deploy_target: test
      repo_name: test
      url_prefix: test-
    secrets: inherit
  call-workflow-dev:
    if: ${{ github.ref == 'refs/heads/dev' || (github.event_name == 'pull_request' && github.base_ref == 'dev' && github.event.pull_request.draft == false) }}
    uses: hwinther-tietoevry/test/.github/workflows/playwright.yml@dev
    with:
      deploy_target: dev
      repo_name: dev
      url_prefix: dev-
    secrets: inherit
