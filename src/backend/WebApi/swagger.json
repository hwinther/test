{
  "openapi": "3.0.1",
  "info": {
    "title": "Example API",
    "description": "An ASP.NET Core Web API example instance",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Example Contact",
      "url": "https://example.com/contact"
    },
    "license": {
      "name": "Example License",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/Blogging/Blog": {
      "get": {
        "tags": [
          "Blogging"
        ],
        "summary": "Get blogs",
        "operationId": "GetBlogs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Blogging"
        ],
        "summary": "Create blog",
        "operationId": "PostBlog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Blog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Blog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          }
        }
      }
    },
    "/Blogging/Post": {
      "get": {
        "tags": [
          "Blogging"
        ],
        "summary": "Get posts",
        "operationId": "GetPosts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Blogging"
        ],
        "summary": "Create post",
        "operationId": "PostPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/SendMessage": {
      "get": {
        "tags": [
          "SendMessage"
        ],
        "summary": "Sends a message using the MessageSender service.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Service/ping": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Returns ok",
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringGenericValue"
                }
              }
            }
          }
        }
      }
    },
    "/Service/version": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Returns version",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInformation"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "Returns weather forecast",
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Blog": {
        "type": "object",
        "properties": {
          "blogId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the blog.",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the URL of the blog.",
            "nullable": true
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            },
            "description": "Gets the collection of posts associated with the blog.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a blog with a unique ID, URL, and a collection of posts."
      },
      "Post": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the post.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Gets or sets the title of the post.",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "Gets or sets the content of the post.",
            "nullable": true
          },
          "blogId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the blog to which the post belongs.",
            "format": "int32"
          },
          "blog": {
            "$ref": "#/components/schemas/Blog"
          }
        },
        "additionalProperties": false,
        "description": "Represents a post with a unique ID, title, content, and the associated blog ID."
      },
      "StringGenericValue": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets or sets the value stored in the container.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a generic value container for value types."
      },
      "VersionInformation": {
        "type": "object",
        "properties": {
          "constants": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Constants defined in the assembly, if any.",
            "nullable": true,
            "readOnly": true,
            "example": [
              "DEBUG",
              "NET8"
            ]
          },
          "version": {
            "type": "string",
            "description": "The version of the assembly.",
            "nullable": true,
            "readOnly": true,
            "example": "1.0.0"
          },
          "informationalVersion": {
            "type": "string",
            "description": "The informational version of the assembly, which may include additional details.",
            "nullable": true,
            "readOnly": true,
            "example": "1.0.0-dev"
          },
          "environmentName": {
            "type": "string",
            "description": "The name of the environment where the application is running.",
            "nullable": true,
            "readOnly": true,
            "example": "Development"
          }
        },
        "additionalProperties": false,
        "description": "Represents version information for an assembly, including constants, environment name, version, and informational\r\nversion."
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of forecast",
            "format": "date",
            "example": "2024.06.07"
          },
          "temperatureC": {
            "type": "integer",
            "description": "Temperature in celsius",
            "format": "int32",
            "example": 25
          },
          "summary": {
            "type": "string",
            "description": "Summary text",
            "nullable": true,
            "example": "Sunny"
          }
        },
        "additionalProperties": false,
        "description": "Weather forecast model"
      }
    }
  }
}