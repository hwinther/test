version: '3.4'

services:
  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    entrypoint: "dotnet WebApi.dll --urls http://*:5000"
    ports:
     - "5000:5000"
    env_file:
      - otel-dotnet.env # enable OpenTelemetry .NET Automatic Instrumentation
    environment:
      DB_CONNECTION: "Server=sqlserver,1433;Initial Catalog=api;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True;"
      # OpenTelemetry environmental variables:
      OTEL_SERVICE_NAME: "service"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "Examples.Service"
      OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES: "Examples.Service"
      RABBITMQ_HOSTNAME: rabbitmq
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      ZIPKIN_HOSTNAME: zipkin
    depends_on:
      - otel-collector
      - sqlserver
      - rabbitmq
      - zipkin

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=yourStrong(!)Password
    ports:
      - "1433:1433"
    volumes:
        - ./docker-volumes/mssql/data/:/var/opt/mssql/data
        - ./docker-volumes/mssql/log/:/var/opt/mssql/log
        - ./docker-volumes/mssql/secrets/:/var/opt/mssql/secrets

  rabbitmq:
    image: rabbitmq:3-management-alpine
    privileged: false
    command: ["bash", "-c", "chmod 600 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server"]
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./docker-volumes/rabbitmq/data/:/var/lib/rabbitmq/mnesia
        - ./docker-volumes/rabbitmq/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "rabbitcookie"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
      - ./docker-volumes/log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - "8889:8889"   # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
    depends_on:
      - jaeger
      - prometheus
      - loki
      - zipkin

  jaeger:
    image: jaegertracing/all-in-one:1.50.0
    ports:
      - "16686:16686" # Jaeger Web UI

  prometheus:
    image: prom/prometheus:v2.42.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.7.4
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor
    ports:
      - "3000:3000"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
